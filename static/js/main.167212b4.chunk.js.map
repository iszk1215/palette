{"version":3,"sources":["palette.tsx","reportWebVitals.ts","index.tsx"],"names":["Point","x","y","this","Palette","colors","isSelected","isVisible","format_color","rgb","hex","n","toString","substr","Math","round","hsv2rgb","h","s","v","m","base","tbl","pos","floor","i","dir","getContext","id","canvas","document","getElementById","ColorMap","props","useEffect","console","log","ctx","drawBar","height","width","fillStyle","fillRect","dv","save","drawColorMap","style","position","zIndex","ColorSelector","pos2hsv","drawCircle","r","no","circle","Path2D","moveTo","arc","PI","strokeStyle","font","textAlign","textBaseline","fillText","fontSize","marginLeft","left","onMouseMove","event","nativeEvent","points","x0","offsetX","dx","ncolors","offsetY","push","clearRect","length","point","drawGuide","hsv","setColors","onMouseLeave","onClick","nx","ny","calcColors","getSampleData","sample_data","data","tmp","random","createSampleData","SampleBarChart","bars","Bar","dataKey","fill","isAnimationActive","ResponsiveContainer","BarChart","XAxis","YAxis","Legend","createPieData","store","SamplePieChart","cells","Cell","PieChart","Pie","label","outerRadius","ColorSample","baseStyle","marginRight","display","justifyContent","alignContent","flexDirection","boxes","texts","background","color","marginTop","textDiv","margin","Control","Grid","container","spacing","item","FormControl","size","FormLabel","Select","value","onChange","e","setNumColors","target","MenuItem","ToggleButtonGroup","backgroundColor","exclusive","setBackgroundColor","ToggleButton","PaletteItem","useState","showBorder","setShowBorder","hide","setHide","palette","border","padding","alignItems","onMouseEnter","ev","cursor","selectPalette","BottomPart","items","paletteList","marginBottom","palette_","onPaletteSelected","p","join","currentColors","xs","Button","variant","clearPaletteList","PaletteMaker","bgcolor","setPaletteList","Array","justify","direction","newPaletteList","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.167212b4.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\n// import InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Slider from \"@material-ui/core/Slider\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport React, {useState, useEffect} from 'react';\n// import ReactDOM from 'react-dom';\n\nimport { BarChart, Bar, Legend, ResponsiveContainer, XAxis, YAxis } from \"recharts\";\nimport { PieChart, Pie, Cell  } from \"recharts\";\n\nclass Point {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nclass Palette {\n  colors: string[];\n  isSelected: boolean;\n  isVisible: boolean;\n\n  constructor(colors: string[]) {\n    this.colors = colors;\n    this.isSelected = true;\n    this.isVisible = true;\n  }\n}\n\nconst format_color = (rgb: number[]) => {\n  const hex = (n : number) => ('0' + n.toString(16)).substr(-2);\n  return \"#\"\n    + hex(Math.round(rgb[0] * 255))\n    + hex(Math.round(rgb[1] * 255))\n    + hex(Math.round(rgb[2] * 255));\n}\n\nconst hsv2rgb = (h: number, s: number, v:number) => {\n  if (h < 0 || s < 0 || v < 0 || h > 1 || s > 1 || v > 1)\n    return [0, 0, 0];\n\n  if (h === 1.0)\n    h = 0;\n\n  const m = v - s; // min(r, g, b)\n  const base =[\n    [v, m, m], [v, v, m], [m, v, m], [m, v, v], [m, m, v], [v, m, v]];\n  const tbl = [[1, 1], [0, -1], [2, 1], [1, -1], [0, 1], [2, -1]];\n  const pos = Math.floor(h * 6);\n  // if (pos > 5) console.log(h, pos);\n  const i = tbl[pos][0];\n  const dir = tbl[pos][1];\n\n  const rgb = base[pos];\n  rgb[i] += s * (h - pos / 6.0) * 6.0 * dir;\n\n  return rgb;\n};\n\nconst getContext = (id: string) => {\n  const canvas : any = document.getElementById(id);\n  if (canvas)\n    return canvas.getContext('2d');\n  return null;\n}\n\ninterface ColorMapProps {\n  width: number,\n  height: number,\n}\n\nexport const ColorMap : React.FC<ColorMapProps> = (props) => {\n  const drawColorMap = () => {\n    console.log(\"drawColorMap\")\n    const ctx = getContext('colormap')\n\n    const drawBar = (y: number, height: number, s: number, v: number) => {\n      //console.log(s);\n      const width = props.width;\n      for (let x = 0; x < width; ++x) {\n        var h = x * 1.0 / width;\n        // if (h >= 1.0) h -= 1.0;\n        const rgb = hsv2rgb(h, s, v);\n        ctx.fillStyle = format_color(rgb);\n        ctx.fillRect(x, y, 1, height);\n      }\n    };\n\n    const height = props.height;\n    const dh = 1;\n    const margin = 0;\n\n    /*\n    const v = 1.0;\n    const ds = v / height;\n    for (let y = 0; y < height; ++y) {\n      drawBar((dh + margin) * y, dh, v - y * ds, v);\n    }\n     */\n\n    const dv = 1.0 / height;\n    for (let y = 0; y < height; ++y) {\n      const v = 1.0 - dv * y;\n      drawBar((dh + margin) * y, dh, v, v);\n    }\n\n    ctx.save();\n  } // drawColorMap\n\n  useEffect(() => {\n    drawColorMap();\n  }, []);\n\n  return (\n    <canvas id=\"colormap\"\n      width={props.width} height={props.height}\n      style={{position: \"absolute\", zIndex: 1}}\n    />\n  );\n}\n\nexport interface ColorSelectorProps {\n  width: number,\n  height: number,\n  ncolors: number,\n  setColors: (colors: string[]) => void,\n  onClick: (colors: string[]) => void,\n  onMouseLeave: () => void,\n}\n\nexport const ColorSelector : React.FC<ColorSelectorProps> = (props) => \n{\n  const pos2hsv = (x: number, y: number) => {\n    const h = x * 1.0 / props.width;\n    if (false) {\n      const v = 1.0;\n      const s = v - (v / props.height) * y;\n      return [h, s, v]\n    } else {\n      const v = 1.0 - 1.0 / props.height * y;\n      const s = v;\n      return [h, s, v]\n    }\n  };\n\n  const drawCircle = (ctx: any, x: number, y: number, r: number, no: number) => {\n    var circle = new Path2D();\n    circle.moveTo(x + r, y);\n    circle.arc(x, y, r, 0, 2 * Math.PI);\n    if (ctx) {\n      // console.log(\"drawCircle: \", x, y, r);\n      // ctx.strokeStyle = '#000000';\n      ctx.strokeStyle = '#ffffff';\n      //ctx.stroke(circle);\n      ctx.fillStyle = '#ffffff';\n      ctx.font = \"14px sans-serif\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(\"\" + no, x, y);\n      ctx.save();\n    }\n  }\n\n  const drawGuide = (points: Point[], r: number) => {\n    const ctx = getContext('overlay');\n    ctx.clearRect(0, 0, props.width, props.height);\n    for (let i = 0; i < points.length; ++i) {\n      const point = points[i];\n      drawCircle(ctx, point.x, point.y, r, i);\n    }\n  }\n\n  const calcColors = (nx: number, ny: number) => {\n    const points: Point[] = [];\n\n    //const x0 = n.offsetX % (props.width / props.ncolors);\n    const x0 = nx;\n\n    const dx = props.width / props.ncolors;\n    const dy = 0; // props.height / props.ncolors;\n    for (let i = 0; i < props.ncolors; ++i) {\n      //const x = (n.offsetX + dx * i) % props.width;\n      const x = (x0 + dx * i) % props.width;\n      const y = (ny + dy * i) % props.height;\n      points.push(new Point(x, y));\n    }\n    /*\n    const dx = props.width / props.ncolors;\n    const dy = 0; // props.height / props.ncolors;\n    for (let i = 0; i < props.ncolors; ++i) {\n      const j = Math.floor(i / 2) + Math.ceil(props.ncolors / 2) * (i % 2);\n      const x = (x0 + dx * j) % props.width;\n      const y = (n.offsetY + dy * i) % props.height;\n      points.push(new Point(x, y));\n    }\n     */\n\n    var colors: string[] = []\n    for (let point of points) {\n      const hsv = pos2hsv(point.x, point.y);\n      colors.push(format_color(hsv2rgb(hsv[0], hsv[1], hsv[2])));\n    }\n\n    return colors;\n  };\n\n  const onMouseMove = (event: any) => {\n    const n = event.nativeEvent;\n   \n    const points: Point[] = [];\n\n    //const x0 = n.offsetX % (props.width / props.ncolors);\n    const x0 = n.offsetX;\n\n    const dx = props.width / props.ncolors;\n    const dy = 0; // props.height / props.ncolors;\n    for (let i = 0; i < props.ncolors; ++i) {\n      //const x = (n.offsetX + dx * i) % props.width;\n      const x = (x0 + dx * i) % props.width;\n      const y = (n.offsetY + dy * i) % props.height;\n      points.push(new Point(x, y));\n    }\n    /*\n    const dx = props.width / props.ncolors;\n    const dy = 0; // props.height / props.ncolors;\n    for (let i = 0; i < props.ncolors; ++i) {\n      const j = Math.floor(i / 2) + Math.ceil(props.ncolors / 2) * (i % 2);\n      const x = (x0 + dx * j) % props.width;\n      const y = (n.offsetY + dy * i) % props.height;\n      points.push(new Point(x, y));\n    }\n     */\n\n    drawGuide(points, 4);\n\n    var colors: string[] = []\n    for (let point of points) {\n      const hsv = pos2hsv(point.x, point.y);\n      colors.push(format_color(hsv2rgb(hsv[0], hsv[1], hsv[2])));\n    }\n    props.setColors(colors);\n  };\n\n  const onClick = (event: any) => {\n    console.log(\"onclick\")\n    const colors = calcColors(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n    props.onClick(colors);\n  }\n\n  return (\n    <div>\n      {/* X axis */}\n      <div style={{width: props.width, textAlign: \"center\"}}>Hue</div>\n      <div style={{width: props.width, height: 20, position: \"relative\",\n          fontSize: \"x-small\", marginLeft: 0, textAlign: \"center\"}} >\n        <div style={{position: \"absolute\", textAlign: \"left\"}}>0</div>\n        <div style={{position: \"absolute\", left: props.width/6-10, width:20}}>60</div>\n        <div style={{position: \"absolute\", left: props.width/6*2-10, width:20}}>120</div>\n        <div style={{position: \"absolute\", left: props.width/6*3-10, width:20}}>180</div>\n        <div style={{position: \"absolute\", left: props.width/6*4-10, width:20}}>240</div>\n        <div style={{position: \"absolute\", left: props.width/6*5-10, width:20}}>300</div>\n        <div style={{position: \"absolute\", left: props.width/6*6-80, width: 80, textAlign: \"right\"}}>360</div>\n      </div>\n\n      <div style={{width: props.width, height: props.height,\n          marginLeft: 0,\n          position: \"relative\"}} >\n        <ColorMap width={props.width} height={props.height} />\n        <canvas \n          id=\"overlay\"\n          style={{position: \"absolute\", zIndex: 2}}\n          width={props.width}\n          height={props.height}\n          onMouseMove={onMouseMove}\n          onMouseLeave={props.onMouseLeave}\n          onClick={onClick}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface SampleChartProps {\n  colors: string[],\n}\n\n// {x: \"x0\", \"data0\": 1.234, \"data1\": 3.14, ...}\nconst createSampleData = (n: number, nx: number) => {\n  const data: {[label: string]: number|string}[] = [];\n  for (let x = 0; x < nx; ++x) {\n    const tmp: {[label: string]: number|string} = {\"x\": 2018 + x}\n    for (let i = 0; i < n; ++i) {\n      const label = \"data\" + i;\n      tmp[label] = Math.floor(Math.random() * 100);\n    }\n    data.push(tmp)\n  }\n  return data;\n}\n\nconst getSampleData = function() {\n  const sample_data: {[n: number]: any} = {};\n\n  return (n: number) => {\n    if (!(n in sample_data))\n      sample_data[n] = createSampleData(n, 4);\n    return sample_data[n];\n  }\n}();\n\nexport const SampleBarChart : React.FC<SampleChartProps> = (props) => {\n  const data = getSampleData(props.colors.length);\n\n  const bars: JSX.Element[] = [];\n\n  for (let i = 0; i < props.colors.length; ++i) {\n    bars.push(\n      <Bar\n        key={\"bar\" + i}\n        dataKey={\"data\" + i }\n        fill={props.colors[i]}\n        isAnimationActive={false} />\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"90%\" height={240}>\n      <BarChart data={data}>\n        <XAxis dataKey=\"x\" />\n        <YAxis />\n        <Legend />\n        {bars}\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\nconst createPieData = function() {\n  const store: {[n: number]: any} = {};\n\n  return (n: number) => {\n    if (n in store)\n      return store[n];\n\n    const data: {i: number, data: number}[] = [];\n    for (let i = 0; i < n; ++i) {\n      data.push({i:i, data: Math.floor(Math.random() * 100)});\n    }\n    store[n] = data;\n\n    return data;\n  };\n}();\n\nexport const SamplePieChart : React.FC<SampleChartProps> = (props) => {\n\n  const data = createPieData(props.colors.length);\n\n  const cells: JSX.Element[] = [];\n\n  for (let i = 0; i < props.colors.length; ++i) {\n    cells.push(\n      <Cell\n        key={\"cell\" + i }\n        fill={props.colors[i]} />\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"50%\" height={240}>\n      <PieChart height={240}>\n        <Pie\n          data={data}\n          dataKey={\"data\"} \n          label={true}\n          outerRadius={\"70%\"}\n          isAnimationActive={false}\n        >\n          { cells }\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport interface ColorSampleProps {\n  width: number,\n  colors: string[],\n}\n\nexport const ColorSample : React.FC<ColorSampleProps> = (props) => {\n  const colors = props.colors;\n  let width = (props.width - 10 * (colors.length - 1)) / colors.length;\n\n  const baseStyle = {\n    width: width,\n    height: 20,\n    marginRight: 10,\n    fontSize: \"x-small\",\n    textAlign: \"center\" as const,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    flexDirection: \"column\" as const,\n  };\n\n  const boxes: JSX.Element[] = []\n  const texts: JSX.Element[] = []\n  for (let i = 0; i < props.colors.length; ++i) {\n    boxes.push(\n      <div\n        key={\"sample-box\" + i}\n        style={{ ...baseStyle, \n                background: props.colors[i],\n                color: \"#ffffff\"\n        }} >\n        {i}\n      </div>);\n    texts.push(\n      <div\n        key={\"sample-text\" + i}\n        style={{...baseStyle, color: props.colors[i], height: 10, marginTop: 2}} >\n        { props.colors[i] }\n      </div>);\n  }\n\n  const textDiv = \n    <div style={{display: \"flex\", flexDirection: \"row\", marginTop: 0}}>\n      { texts }\n    </div>\n\n    return (\n      <div>\n        <div style={{display: \"flex\", flexDirection: \"row\", margin: 0}}>\n          { boxes }\n        </div>\n        { textDiv }\n      </div>\n  );\n}\n\ninterface ControlProps {\n  width: number,\n  ncolors: number,\n  setNumColors: (ncolors: number) => void,\n  backgroundColor: string,\n  setBackgroundColor: (color: string) => void,\n};\n\nconst Control : React.FC<ControlProps> = (props) => {\n  //const [bgcolor, setBgcolor] = useState<string>(props.backgroundColor);\n\n  const onChange = (e: React.ChangeEvent<{value: unknown}>) => {\n    props.setNumColors(e.target.value as number);\n  };\n\n  const onBackGroundChange = (e: React.MouseEvent<HTMLElement>, value: string) => {\n    props.setBackgroundColor(value);\n    //setBgcolor(value);\n  };\n\n  return(\n    <div style={{width: props.width}}>\n      <Grid container spacing={2}>\n        <Grid item>\n          <FormControl size=\"small\">\n            <FormLabel style={{fontSize: \"small\"}}># of colors</FormLabel>\n            <Select\n              value={props.ncolors}\n              onChange={onChange}\n              style={{textAlign: \"center\", marginTop: 8}} >\n              <MenuItem value={2}>2</MenuItem>\n              <MenuItem value={3}>3</MenuItem>\n              <MenuItem value={4}>4</MenuItem>\n              <MenuItem value={5}>5</MenuItem>\n              <MenuItem value={6}>6</MenuItem>\n              <MenuItem value={7}>7</MenuItem>\n              <MenuItem value={8}>8</MenuItem>\n              <MenuItem value={9}>9</MenuItem>\n              <MenuItem value={10}>10</MenuItem>\n              <MenuItem value={11}>11</MenuItem>\n              <MenuItem value={12}>12</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl size=\"small\">\n            <FormLabel style={{fontSize: \"small\"}}>Background</FormLabel>\n            <ToggleButtonGroup\n              value={props.backgroundColor}\n              exclusive\n              onChange={onBackGroundChange}\n              size=\"small\"\n            >\n              <ToggleButton value=\"#ffffff\">Light</ToggleButton>\n              <ToggleButton value=\"#111111\">Dark</ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\ninterface PaletteItemProps {\n  palette: Palette,\n  selectPalette: (palette: Palette) => void,\n};\n\nconst PaletteItem: React.FC<PaletteItemProps> = (props) => {\n  const [showBorder, setShowBorder] = useState(false);\n  const [hide, setHide] = useState(false);\n\n  const onClick = (ev: any) => {\n    // console.log(\"onClick\");\n    props.selectPalette(props.palette);\n  }\n\n  const onMouseEnter = (ev: any) => {\n    // console.log(\"onMouseEnter\");\n    setShowBorder(true);\n  }\n\n  const onMouseLeave = (ev: any) => {\n    // console.log(\"onMouseEnter\");\n    setShowBorder(false);\n  }\n\n  const removePalette = () => {\n    setHide(true);\n  }\n\n  const boxes: JSX.Element[] = [];\n  for (let i = 0; i < props.palette.colors.length; ++i) {\n    boxes.push(\n      <div\n        key={\"palette-box\" + i}\n        style={{width: 20,\n            height: 20,\n            background: props.palette.colors[i],\n            marginRight: i + 1 < props.palette.colors.length ? 2 : 0,\n            border: \"solid 1px #444444\",\n        }} >\n      </div>\n    );\n  }\n\n  let border = {border: \"solid 1px #ffffff\", padding: 3};\n  if (props.palette.isSelected) {\n    border = {border: \"solid 2px #000000\", padding: 2};\n  } else if (showBorder) {\n    border = {border: \"solid 1px #000000\", padding: 3};\n  }\n\n  let display = {display: \"flex\"};\n  if (hide)\n    display = {display: \"none\"};\n\n  return (\n    <div style={{\n      ...display,\n        textAlign: \"center\" as const,\n        //justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"row\" as const,\n    }}>\n      <div \n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        style={{display: \"flex\", flexDirection: \"row\",\n            ...border,\n            cursor: \"pointer\",\n        }}\n        onClick={onClick}\n      >\n        { boxes }\n      </div>\n      <RemoveCircleOutlineIcon\n        fontSize=\"small\"\n        style={{cursor: \"pointer\"}}\n        onClick={removePalette}\n      />\n    </div>\n  );\n\n};\n\ninterface BottomPartProps {\n  width: number,\n  ncolors: number,\n  paletteList: Palette[],\n  currentColors: string[],\n  onPaletteSelected: (palette: Palette) => void,\n  clearPaletteList: () => void,\n}\n\nconst BottomPart : React.FC<BottomPartProps> = (props) => {\n  const items: JSX.Element[] = [];\n  console.log(\"BottomPart\");\n\n  let i = 0;\n  for (let palette of props.paletteList) {\n    // console.log('BottomPart', i, palette.isVisible);\n    if (palette.isVisible) {\n      items.push(\n        <div \n          key={\"palette\" + i}\n          style={{marginBottom: 1}}>\n          <PaletteItem\n            palette={palette}\n            selectPalette={(palette_: Palette) => {\n              props.onPaletteSelected(palette_)\n              for (let p of props.paletteList) {\n                if (p === palette) {\n                  p.isSelected = true;\n                } else {\n                  p.isSelected = false;\n                }\n              }\n            }}\n          />\n        </div>\n      );\n    }\n    ++i;\n  }\n\n  let tmp = \"\";\n  for (let palette of props.paletteList) {\n    if (palette.isSelected) {\n      tmp = palette.colors.join(\"\\n\");\n    }\n  }\n\n  return (\n    <Grid container>\n\n      <Grid item container\n        style={{marginTop: 10}}>\n        <Grid item>\n          <ColorSample \n            width={props.width}\n            colors={props.currentColors}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid item container>\n\n        <Grid item xs={8}>\n          <div style={{border: \"solid 1px\", marginTop: \"10px\", marginRight: \"20px\", padding: \"5px\" }}>\n            <h4 style={{border: \"none 1px\", margin: \"0px\", marginBottom: \"20px\", padding: \"0px\" }}>Sample Charts</h4>\n              <SampleBarChart colors={props.currentColors} />\n              <SamplePieChart colors={props.currentColors} />\n            </div>\n        </Grid>\n\n        <Grid item>\n          <Grid container alignItems=\"center\" spacing={2}>\n            <Grid item>\n              <h4>Palette List</h4>\n            </Grid>\n            <Grid item>\n              <Button variant=\"outlined\" size=\"small\"\n                onClick={props.clearPaletteList}>\n                Clear all</Button>\n            </Grid>\n          </Grid>\n          { items }\n\n          <h4>Selected Palette</h4>\n          <pre style={{fontSize: \"large\"}}>{tmp}</pre>\n        </Grid>\n\n      </Grid>\n    </Grid>\n  );\n};\n\nexport interface PaletteMakerProps {\n  width: number,\n    height: number,\n}\n\nexport const PaletteMaker : React.FC<PaletteMakerProps> = (props) => {\n  const [ncolors, setNumColors] = useState<number>(6);\n  const [bgcolor, setBackgroundColor] = useState<string>(\"#ffffff\");\n\n  const [paletteList, setPaletteList] = useState<Palette[]>([]);\n\n  const [currentColors, setColors]\n    = useState<string[]>(Array(ncolors).fill(\"#ffffff\"));\n\n  const addPalette = (colors: string[]) => {\n    const newPaletteList = [...paletteList];\n    for (let p of newPaletteList)\n      p.isSelected = false;\n    newPaletteList.push(new Palette(colors));\n    setPaletteList(newPaletteList);\n  };\n\n  const clearPaletteList = () => {\n    const newPaletteList = [...paletteList];\n    for (let p of newPaletteList)\n      p.isVisible = false;\n    setPaletteList(newPaletteList);\n  };\n\n  const selectPalette = (palette: Palette) => {\n    setColors(palette.colors)\n  };\n\n  const resetColors = () => {\n    const p = paletteList.find(p => p.isSelected);\n    if (p)\n      setColors(p.colors);\n  }\n\n  //<div style={{width: props.width}}>\n  return (\n    <Grid container justify=\"center\" style={{background: \"gray\"}}>\n      <div style={{border: \"solid 1px\", background: \"white\", padding: \"10px\"}}>\n          <h1 style={{marginTop: \"0px\"}}>Color Palette Maker for Charts</h1>\n      <Grid item container direction=\"column\" style={{width: props.width}}>\n        <Grid item>\n          <Control\n            width={props.width}\n            backgroundColor={bgcolor}\n            setBackgroundColor={setBackgroundColor}\n            ncolors={ncolors}\n            setNumColors={setNumColors}\n          />\n        </Grid>\n\n        <Grid item>\n          <ColorSelector\n            width={props.width}\n            height={props.height}\n            ncolors={ncolors}\n            setColors={setColors}\n            onClick={addPalette}\n            onMouseLeave={resetColors}\n          />\n        </Grid>\n\n        <Grid item\n          style={{background: bgcolor, padding: 0}} >\n          <BottomPart\n            width={props.width}\n            ncolors={ncolors}\n            paletteList={paletteList}\n            currentColors={currentColors}\n            onPaletteSelected={selectPalette}\n            clearPaletteList={clearPaletteList}\n          />\n        </Grid>\n\n      </Grid>\n      </div>\n    </Grid>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport { PaletteMaker } from './palette';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PaletteMaker width={1080} height={200}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}