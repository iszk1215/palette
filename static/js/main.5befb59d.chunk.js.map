{"version":3,"sources":["palette.tsx","reportWebVitals.ts","index.tsx"],"names":["Point","x","y","this","Palette","colors","isSelected","isVisible","format_color","rgb","hex","n","toString","substr","Math","round","hsv2rgb","h","s","v","m","base","tbl","pos","floor","i","dir","getContext","id","canvas","document","getElementById","ColorMap","props","useEffect","ctx","drawBar","height","width","fillStyle","fillRect","dv","save","drawColorMap","style","position","zIndex","ColorSelector","pos2hsv","drawCircle","r","no","circle","Path2D","moveTo","arc","PI","strokeStyle","font","textAlign","textBaseline","fillText","fontSize","marginLeft","left","onMouseMove","event","nativeEvent","points","x0","offsetX","dx","ncolors","offsetY","push","clearRect","length","point","drawGuide","hsv","setColors","onMouseLeave","onClick","nx","ny","calcColors","getSampleData","sample_data","data","tmp","random","createSampleData","SampleBarChart","bars","Bar","dataKey","fill","isAnimationActive","ResponsiveContainer","BarChart","XAxis","YAxis","Legend","createPieData","store","SamplePieChart","cells","Cell","PieChart","Pie","label","outerRadius","ColorSample","baseStyle","marginRight","display","justifyContent","alignContent","flexDirection","boxes","texts","background","color","marginTop","textDiv","margin","Control","Grid","container","spacing","direction","item","FormControl","size","FormLabel","Select","value","onChange","e","setNumColors","target","MenuItem","ToggleButtonGroup","backgroundColor","exclusive","setBackgroundColor","ToggleButton","PaletteItem","useState","showBorder","setShowBorder","hide","setHide","palette","border","padding","alignItems","onMouseEnter","ev","cursor","selectPalette","BottomPart","items","paletteList","marginBottom","palette_","onPaletteSelected","p","join","currentColors","xs","bgcolor","Button","variant","clearPaletteList","PaletteMaker","setPaletteList","Array","justify","newPaletteList","find","paddingLeft","paddingRight","className","href","src","verticalAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5befb59d.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Slider from \"@material-ui/core/Slider\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport React, { useState, useEffect } from \"react\";\n// import ReactDOM from 'react-dom';\n\nimport {\n  BarChart,\n  Bar,\n  Legend,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { PieChart, Pie, Cell } from \"recharts\";\n\nclass Point {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nclass Palette {\n  colors: string[];\n  isSelected: boolean;\n  isVisible: boolean;\n\n  constructor(colors: string[]) {\n    this.colors = colors;\n    this.isSelected = true;\n    this.isVisible = true;\n  }\n}\n\nconst format_color = (rgb: number[]) => {\n  const hex = (n: number) => (\"0\" + n.toString(16)).substr(-2);\n  return (\n    \"#\" +\n    hex(Math.round(rgb[0] * 255)) +\n    hex(Math.round(rgb[1] * 255)) +\n    hex(Math.round(rgb[2] * 255))\n  );\n};\n\nconst hsv2rgb = (h: number, s: number, v: number) => {\n  if (h < 0 || s < 0 || v < 0 || h > 1 || s > 1 || v > 1) return [0, 0, 0];\n\n  if (h === 1.0) h = 0;\n\n  const m = v - s; // min(r, g, b)\n  const base = [\n    [v, m, m],\n    [v, v, m],\n    [m, v, m],\n    [m, v, v],\n    [m, m, v],\n    [v, m, v],\n  ];\n  const tbl = [\n    [1, 1],\n    [0, -1],\n    [2, 1],\n    [1, -1],\n    [0, 1],\n    [2, -1],\n  ];\n  const pos = Math.floor(h * 6);\n  // if (pos > 5) console.log(h, pos);\n  const i = tbl[pos][0];\n  const dir = tbl[pos][1];\n\n  const rgb = base[pos];\n  rgb[i] += s * (h - pos / 6.0) * 6.0 * dir;\n\n  return rgb;\n};\n\nconst getContext = (id: string) => {\n  const canvas: any = document.getElementById(id);\n  if (canvas) return canvas.getContext(\"2d\");\n  return null;\n};\n\ninterface ColorMapProps {\n  width: number;\n  height: number;\n}\n\nexport const ColorMap: React.FC<ColorMapProps> = (props) => {\n  const drawColorMap = () => {\n    // console.log(\"drawColorMap\");\n    const ctx = getContext(\"colormap\");\n\n    const drawBar = (y: number, height: number, s: number, v: number) => {\n      //console.log(s);\n      const width = props.width;\n      for (let x = 0; x < width; ++x) {\n        var h = (x * 1.0) / width;\n        // if (h >= 1.0) h -= 1.0;\n        const rgb = hsv2rgb(h, s, v);\n        ctx.fillStyle = format_color(rgb);\n        ctx.fillRect(x, y, 1, height);\n      }\n    };\n\n    const height = props.height;\n    const dh = 1;\n    const margin = 0;\n\n    /*\n    const v = 1.0;\n    const ds = v / height;\n    for (let y = 0; y < height; ++y) {\n      drawBar((dh + margin) * y, dh, v - y * ds, v);\n    }\n     */\n\n    const dv = 1.0 / height;\n    for (let y = 0; y < height; ++y) {\n      const v = 1.0 - dv * y;\n      drawBar((dh + margin) * y, dh, v, v);\n    }\n\n    ctx.save();\n  }; // drawColorMap\n\n  useEffect(() => {\n    drawColorMap();\n  }, []);\n\n  return (\n    <canvas\n      id=\"colormap\"\n      width={props.width}\n      height={props.height}\n      style={{ position: \"absolute\", zIndex: 1 }}\n    />\n  );\n};\n\nexport interface ColorSelectorProps {\n  width: number;\n  height: number;\n  ncolors: number;\n  setColors: (colors: string[]) => void;\n  onClick: (colors: string[]) => void;\n  onMouseLeave: () => void;\n}\n\nexport const ColorSelector: React.FC<ColorSelectorProps> = (props) => {\n  const pos2hsv = (x: number, y: number) => {\n    const h = (x * 1.0) / props.width;\n    if (false) {\n      const v = 1.0;\n      const s = v - (v / props.height) * y;\n      return [h, s, v];\n    } else {\n      const v = 1.0 - (1.0 / props.height) * y;\n      const s = v;\n      return [h, s, v];\n    }\n  };\n\n  const drawCircle = (\n    ctx: any,\n    x: number,\n    y: number,\n    r: number,\n    no: number\n  ) => {\n    var circle = new Path2D();\n    circle.moveTo(x + r, y);\n    circle.arc(x, y, r, 0, 2 * Math.PI);\n    if (ctx) {\n      // console.log(\"drawCircle: \", x, y, r);\n      // ctx.strokeStyle = '#000000';\n      ctx.strokeStyle = \"#ffffff\";\n      //ctx.stroke(circle);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.font = \"14px sans-serif\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(\"\" + no, x, y);\n      ctx.save();\n    }\n  };\n\n  const drawGuide = (points: Point[], r: number) => {\n    const ctx = getContext(\"overlay\");\n    ctx.clearRect(0, 0, props.width, props.height);\n    for (let i = 0; i < points.length; ++i) {\n      const point = points[i];\n      drawCircle(ctx, point.x, point.y, r, i);\n    }\n  };\n\n  const calcColors = (nx: number, ny: number) => {\n    const points: Point[] = [];\n\n    //const x0 = n.offsetX % (props.width / props.ncolors);\n    const x0 = nx;\n\n    const dx = props.width / props.ncolors;\n    const dy = 0; // props.height / props.ncolors;\n    for (let i = 0; i < props.ncolors; ++i) {\n      //const x = (n.offsetX + dx * i) % props.width;\n      const x = (x0 + dx * i) % props.width;\n      const y = (ny + dy * i) % props.height;\n      points.push(new Point(x, y));\n    }\n    /*\n    const dx = props.width / props.ncolors;\n    const dy = 0; // props.height / props.ncolors;\n    for (let i = 0; i < props.ncolors; ++i) {\n      const j = Math.floor(i / 2) + Math.ceil(props.ncolors / 2) * (i % 2);\n      const x = (x0 + dx * j) % props.width;\n      const y = (n.offsetY + dy * i) % props.height;\n      points.push(new Point(x, y));\n    }\n     */\n\n    var colors: string[] = [];\n    for (let point of points) {\n      const hsv = pos2hsv(point.x, point.y);\n      colors.push(format_color(hsv2rgb(hsv[0], hsv[1], hsv[2])));\n    }\n\n    return colors;\n  };\n\n  const onMouseMove = (event: any) => {\n    const n = event.nativeEvent;\n\n    const points: Point[] = [];\n\n    //const x0 = n.offsetX % (props.width / props.ncolors);\n    const x0 = n.offsetX;\n\n    const dx = props.width / props.ncolors;\n    const dy = 0; // props.height / props.ncolors;\n    for (let i = 0; i < props.ncolors; ++i) {\n      //const x = (n.offsetX + dx * i) % props.width;\n      const x = (x0 + dx * i) % props.width;\n      const y = (n.offsetY + dy * i) % props.height;\n      points.push(new Point(x, y));\n    }\n    /*\n    const dx = props.width / props.ncolors;\n    const dy = 0; // props.height / props.ncolors;\n    for (let i = 0; i < props.ncolors; ++i) {\n      const j = Math.floor(i / 2) + Math.ceil(props.ncolors / 2) * (i % 2);\n      const x = (x0 + dx * j) % props.width;\n      const y = (n.offsetY + dy * i) % props.height;\n      points.push(new Point(x, y));\n    }\n     */\n\n    drawGuide(points, 4);\n\n    var colors: string[] = [];\n    for (let point of points) {\n      const hsv = pos2hsv(point.x, point.y);\n      colors.push(format_color(hsv2rgb(hsv[0], hsv[1], hsv[2])));\n    }\n    props.setColors(colors);\n  };\n\n  const onClick = (event: any) => {\n    // console.log(\"onclick\");\n    const colors = calcColors(\n      event.nativeEvent.offsetX,\n      event.nativeEvent.offsetY\n    );\n    props.onClick(colors);\n  };\n\n  return (\n    <div>\n      {/* X axis */}\n      <div style={{ width: props.width, textAlign: \"center\" }}>Hue</div>\n      <div\n        style={{\n          width: props.width,\n          height: 20,\n          position: \"relative\",\n          fontSize: \"x-small\",\n          marginLeft: 0,\n          textAlign: \"center\",\n        }}\n      >\n        <div style={{ position: \"absolute\", textAlign: \"left\" }}>0</div>\n        <div\n          style={{\n            position: \"absolute\",\n            left: props.width / 6 - 10,\n            width: 20,\n          }}\n        >\n          60\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            left: (props.width / 6) * 2 - 10,\n            width: 20,\n          }}\n        >\n          120\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            left: (props.width / 6) * 3 - 10,\n            width: 20,\n          }}\n        >\n          180\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            left: (props.width / 6) * 4 - 10,\n            width: 20,\n          }}\n        >\n          240\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            left: (props.width / 6) * 5 - 10,\n            width: 20,\n          }}\n        >\n          300\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            left: (props.width / 6) * 6 - 80,\n            width: 80,\n            textAlign: \"right\",\n          }}\n        >\n          360\n        </div>\n      </div>\n\n      <div\n        style={{\n          width: props.width,\n          height: props.height,\n          marginLeft: 0,\n          position: \"relative\",\n        }}\n      >\n        <ColorMap width={props.width} height={props.height} />\n        <canvas\n          id=\"overlay\"\n          style={{ position: \"absolute\", zIndex: 2 }}\n          width={props.width}\n          height={props.height}\n          onMouseMove={onMouseMove}\n          onMouseLeave={props.onMouseLeave}\n          onClick={onClick}\n        />\n      </div>\n    </div>\n  );\n};\n\ninterface SampleChartProps {\n  colors: string[];\n}\n\n// {x: \"x0\", \"data0\": 1.234, \"data1\": 3.14, ...}\nconst createSampleData = (n: number, nx: number) => {\n  const data: { [label: string]: number | string }[] = [];\n  for (let x = 0; x < nx; ++x) {\n    const tmp: { [label: string]: number | string } = { x: 2018 + x };\n    for (let i = 0; i < n; ++i) {\n      const label = \"data\" + i;\n      tmp[label] = Math.floor(Math.random() * 100);\n    }\n    data.push(tmp);\n  }\n  return data;\n};\n\nconst getSampleData = (function () {\n  const sample_data: { [n: number]: any } = {};\n\n  return (n: number) => {\n    if (!(n in sample_data)) sample_data[n] = createSampleData(n, 4);\n    return sample_data[n];\n  };\n})();\n\nexport const SampleBarChart: React.FC<SampleChartProps> = (props) => {\n  const data = getSampleData(props.colors.length);\n\n  const bars: JSX.Element[] = [];\n\n  for (let i = 0; i < props.colors.length; ++i) {\n    bars.push(\n      <Bar\n        key={\"bar\" + i}\n        dataKey={\"data\" + i}\n        fill={props.colors[i]}\n        isAnimationActive={false}\n      />\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"90%\" height={240}>\n      <BarChart data={data}>\n        <XAxis dataKey=\"x\" />\n        <YAxis />\n        <Legend />\n        {bars}\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst createPieData = (function () {\n  const store: { [n: number]: any } = {};\n\n  return (n: number) => {\n    if (n in store) return store[n];\n\n    const data: { i: number; data: number }[] = [];\n    for (let i = 0; i < n; ++i) {\n      data.push({ i: i, data: Math.floor(Math.random() * 100) });\n    }\n    store[n] = data;\n\n    return data;\n  };\n})();\n\nexport const SamplePieChart: React.FC<SampleChartProps> = (props) => {\n  const data = createPieData(props.colors.length);\n\n  const cells: JSX.Element[] = [];\n\n  for (let i = 0; i < props.colors.length; ++i) {\n    cells.push(<Cell key={\"cell\" + i} fill={props.colors[i]} />);\n  }\n\n  return (\n    <ResponsiveContainer width=\"50%\" height={240}>\n      <PieChart height={240}>\n        <Pie\n          data={data}\n          dataKey={\"data\"}\n          label={true}\n          outerRadius={\"70%\"}\n          isAnimationActive={false}\n        >\n          {cells}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport interface ColorSampleProps {\n  width: number;\n  colors: string[];\n}\n\nexport const ColorSample: React.FC<ColorSampleProps> = (props) => {\n  const colors = props.colors;\n  let width = (props.width - 10 * (colors.length - 1)) / colors.length;\n\n  const baseStyle = {\n    width: width,\n    height: 20,\n    marginRight: 10,\n    fontSize: \"x-small\",\n    textAlign: \"center\" as const,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    flexDirection: \"column\" as const,\n  };\n\n  const boxes: JSX.Element[] = [];\n  const texts: JSX.Element[] = [];\n  for (let i = 0; i < props.colors.length; ++i) {\n    boxes.push(\n      <div\n        key={\"sample-box\" + i}\n        style={{ ...baseStyle, background: props.colors[i], color: \"#ffffff\" }}\n      >\n        {i}\n      </div>\n    );\n    texts.push(\n      <div\n        key={\"sample-text\" + i}\n        style={{\n          ...baseStyle,\n          color: props.colors[i],\n          height: 10,\n          marginTop: 2,\n        }}\n      >\n        {props.colors[i]}\n      </div>\n    );\n  }\n\n  const textDiv = (\n    <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: 0 }}>\n      {texts}\n    </div>\n  );\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: 0 }}>\n        {boxes}\n      </div>\n      {textDiv}\n    </div>\n  );\n};\n\ninterface ControlProps {\n  width: number;\n  ncolors: number;\n  setNumColors: (ncolors: number) => void;\n  backgroundColor: string;\n  setBackgroundColor: (color: string) => void;\n}\n\nconst Control: React.FC<ControlProps> = (props) => {\n  //const [bgcolor, setBgcolor] = useState<string>(props.backgroundColor);\n\n  const onChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n    props.setNumColors(e.target.value as number);\n  };\n\n  const onBackGroundChange = (\n    e: React.MouseEvent<HTMLElement>,\n    value: string\n  ) => {\n    props.setBackgroundColor(value);\n    //setBgcolor(value);\n  };\n\n  return (\n    <div style={{ width: props.width }}>\n      <Grid container spacing={2} direction=\"column\">\n        <Grid item>\n          <FormControl size=\"small\">\n            <FormLabel style={{ fontSize: \"small\" }}># of colors</FormLabel>\n            <Select\n              value={props.ncolors}\n              onChange={onChange}\n              style={{ textAlign: \"center\", marginTop: 8 }}\n            >\n              <MenuItem value={2}>2</MenuItem>\n              <MenuItem value={3}>3</MenuItem>\n              <MenuItem value={4}>4</MenuItem>\n              <MenuItem value={5}>5</MenuItem>\n              <MenuItem value={6}>6</MenuItem>\n              <MenuItem value={7}>7</MenuItem>\n              <MenuItem value={8}>8</MenuItem>\n              <MenuItem value={9}>9</MenuItem>\n              <MenuItem value={10}>10</MenuItem>\n              <MenuItem value={11}>11</MenuItem>\n              <MenuItem value={12}>12</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl size=\"small\">\n            <FormLabel style={{ fontSize: \"small\" }}>Background</FormLabel>\n            <ToggleButtonGroup\n              value={props.backgroundColor}\n              exclusive\n              onChange={onBackGroundChange}\n              size=\"small\"\n            >\n              <ToggleButton value=\"#ffffff\">Light</ToggleButton>\n              <ToggleButton value=\"#111111\">Dark</ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\ninterface PaletteItemProps {\n  palette: Palette;\n  selectPalette: (palette: Palette) => void;\n}\n\nconst PaletteItem: React.FC<PaletteItemProps> = (props) => {\n  const [showBorder, setShowBorder] = useState(false);\n  const [hide, setHide] = useState(false);\n\n  const onClick = (ev: any) => {\n    // console.log(\"onClick\");\n    props.selectPalette(props.palette);\n  };\n\n  const onMouseEnter = (ev: any) => {\n    // console.log(\"onMouseEnter\");\n    setShowBorder(true);\n  };\n\n  const onMouseLeave = (ev: any) => {\n    // console.log(\"onMouseEnter\");\n    setShowBorder(false);\n  };\n\n  const removePalette = () => {\n    setHide(true);\n  };\n\n  const boxes: JSX.Element[] = [];\n  for (let i = 0; i < props.palette.colors.length; ++i) {\n    boxes.push(\n      <div\n        key={\"palette-box\" + i}\n        style={{\n          width: 20,\n          height: 20,\n          background: props.palette.colors[i],\n          marginRight: i + 1 < props.palette.colors.length ? 2 : 0,\n          border: \"solid 1px #444444\",\n        }}\n      ></div>\n    );\n  }\n\n  let border = { border: \"solid 1px #ffffff\", padding: 3 };\n  if (props.palette.isSelected) {\n    border = { border: \"solid 2px #000000\", padding: 2 };\n  } else if (showBorder) {\n    border = { border: \"solid 1px #000000\", padding: 3 };\n  }\n\n  let display = { display: \"flex\" };\n  if (hide) display = { display: \"none\" };\n\n  return (\n    <div\n      style={{\n        ...display,\n        textAlign: \"center\" as const,\n        //justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"row\" as const,\n      }}\n    >\n      <div\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          ...border,\n          cursor: \"pointer\",\n        }}\n        onClick={onClick}\n      >\n        {boxes}\n      </div>\n      <RemoveCircleOutlineIcon\n        fontSize=\"small\"\n        style={{ cursor: \"pointer\" }}\n        onClick={removePalette}\n      />\n    </div>\n  );\n};\n\ninterface BottomPartProps {\n  width: number;\n  ncolors: number;\n  paletteList: Palette[];\n  currentColors: string[];\n  onPaletteSelected: (palette: Palette) => void;\n  clearPaletteList: () => void;\n  bgcolor: string;\n}\n\nconst BottomPart: React.FC<BottomPartProps> = (props) => {\n  const items: JSX.Element[] = [];\n  // console.log(\"BottomPart\");\n\n  let i = 0;\n  for (let palette of props.paletteList) {\n    // console.log('BottomPart', i, palette.isVisible);\n    if (palette.isVisible) {\n      items.push(\n        <div key={\"palette\" + i} style={{ marginBottom: 1 }}>\n          <PaletteItem\n            palette={palette}\n            selectPalette={(palette_: Palette) => {\n              props.onPaletteSelected(palette_);\n              for (let p of props.paletteList) {\n                if (p === palette) {\n                  p.isSelected = true;\n                } else {\n                  p.isSelected = false;\n                }\n              }\n            }}\n          />\n        </div>\n      );\n    }\n    ++i;\n  }\n\n  let tmp = \"\";\n  for (let palette of props.paletteList) {\n    if (palette.isSelected) {\n      tmp = palette.colors.join(\"\\n\");\n    }\n  }\n\n  return (\n    <Grid container>\n      <Grid item container style={{ marginTop: 10 }}>\n        <Grid item>\n          <ColorSample width={props.width} colors={props.currentColors} />\n        </Grid>\n      </Grid>\n\n      <Grid item container>\n        <Grid item xs={8}>\n          <div\n            style={{\n              background: props.bgcolor,\n              border: \"solid 1px\",\n              marginTop: \"10px\",\n              marginRight: \"20px\",\n              padding: \"5px\",\n            }}\n          >\n            <h4\n              style={{\n                border: \"none 1px\",\n                margin: \"0px\",\n                marginBottom: \"20px\",\n                padding: \"0px\",\n              }}\n            >\n              Sample Charts\n            </h4>\n            <SampleBarChart colors={props.currentColors} />\n            <SamplePieChart colors={props.currentColors} />\n          </div>\n        </Grid>\n\n        <Grid item>\n          <Grid container alignItems=\"center\" spacing={2}>\n            <Grid item>\n              <h4>Palette List</h4>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                onClick={props.clearPaletteList}\n              >\n                Clear all\n              </Button>\n            </Grid>\n          </Grid>\n          {items}\n\n          <h4>Selected Palette</h4>\n          <pre style={{ fontSize: \"large\" }}>{tmp}</pre>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport interface PaletteMakerProps {\n  width: number;\n  height: number;\n}\n\nexport const PaletteMaker: React.FC<PaletteMakerProps> = (props) => {\n  const [ncolors, setNumColors] = useState<number>(6);\n  const [bgcolor, setBackgroundColor] = useState<string>(\"#ffffff\");\n\n  const [paletteList, setPaletteList] = useState<Palette[]>([]);\n\n  const [currentColors, setColors] = useState<string[]>(\n    Array(ncolors).fill(\"#ffffff\")\n  );\n\n  const addPalette = (colors: string[]) => {\n    const newPaletteList = [...paletteList];\n    for (let p of newPaletteList) p.isSelected = false;\n    newPaletteList.push(new Palette(colors));\n    setPaletteList(newPaletteList);\n  };\n\n  const clearPaletteList = () => {\n    const newPaletteList = [...paletteList];\n    for (let p of newPaletteList) p.isVisible = false;\n    setPaletteList(newPaletteList);\n  };\n\n  const selectPalette = (palette: Palette) => {\n    setColors(palette.colors);\n  };\n\n  const resetColors = () => {\n    const p = paletteList.find((p) => p.isSelected);\n    if (p) setColors(p.colors);\n  };\n\n  //<div style={{width: props.width}}>\n  return (\n    <Grid container justify=\"center\" style={{ background: \"#bbbbbb\" }}>\n      <Grid\n        item\n        container\n        style={{\n          width: props.width + 20,\n          border: \"solid 1px\",\n          background: \"white\",\n          padding: \"10px\",\n        }}\n      >\n        <h1\n          style={{ marginTop: \"0px\", marginBottom: \"0px\", fontSize: \"large\" }}\n        >\n          Color Palette Generator for Charts\n        </h1>\n        <Grid item container direction=\"column\" style={{ width: props.width }}>\n          <Grid item>\n            <ColorSelector\n              width={props.width}\n              height={props.height}\n              ncolors={ncolors}\n              setColors={setColors}\n              onClick={addPalette}\n              onMouseLeave={resetColors}\n            />\n          </Grid>\n\n          <Grid item style={{ padding: 0, width: props.width }}>\n            <BottomPart\n              width={props.width}\n              ncolors={ncolors}\n              paletteList={paletteList}\n              currentColors={currentColors}\n              onPaletteSelected={selectPalette}\n              clearPaletteList={clearPaletteList}\n              bgcolor={bgcolor}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid\n        item\n        style={{\n          background: \"white\",\n          width: \"200px\",\n          marginLeft: \"3px\",\n          paddingLeft: \"5px\",\n          paddingRight: \"5px\",\n          border: \"solid 1px\",\n        }}\n      >\n        <h4 className=\"myh4\">About</h4>\n        <p>\n          {\" \"}\n          You can generate constant hue strided palettes while looking at\n          various sample charts.\n        </p>\n        <h4 className=\"myh4\">How to use</h4>\n        <p>\n          <ol style={{ paddingLeft: \"24px\" }}>\n            <li>Move a pointer on color map to find a palette you like.</li>\n            <li>Click to save a current palette into a palette list.</li>\n            <li>Color code of current palette is shown under the list.</li>\n          </ol>\n        </p>\n\n        <h4 className=\"myh4\">Control</h4>\n        <p>\n          <Control\n            width={props.width}\n            backgroundColor={bgcolor}\n            setBackgroundColor={setBackgroundColor}\n            ncolors={ncolors}\n            setNumColors={setNumColors}\n          />\n        </p>\n\n        <p>\n          <a href=\"https://github.com/iszk1215/palette\">\n            <img\n              src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n              width=\"28px\"\n              style={{ verticalAlign: \"middle\" }}\n            />\n            <span style={{ verticalAlign: \"middle\" }}> Feedback </span>\n          </a>\n        </p>\n        <p style={{ fontSize: \"small\" }}>Jun 30, 2021</p>\n      </Grid>\n    </Grid>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport { PaletteMaker } from './palette';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PaletteMaker width={1080} height={200}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}